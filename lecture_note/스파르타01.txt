==========================================================
[0] Overview

HTML : 뼈대
CSS(Cascading Style Sheet) : 스타일 지정
Javascript : 동적 요소 부여

==========================================================
[1] HTML - Visual Studio 이용

ctrl + alt + f : correct indentation
ctrl + / : 주석 처리 및 해제
같은 줄에서 나열시 ;로 구분

* 기본구성
<html>
    <head>
        <title> </title>
        <style> </style> ------------------ CSS
        <script> </script> ---------------- Javascript
    </head>
    <body>
        <div>
        </div>
    </body>
</html>

* 태그종류 - structure 태그
<div> : 구역 나눔
<p> : 문단 설정
<ol> : 숫자 리스트
<ul> : bullet 리스트
<li> : ol과 ul의 자식태그. 리스트 요소.
<br> : 줄바꿈
<hr> : 줄긋기
- 모든 태그는 끝에 </태그명>으로 닫아줘야 함.
- hr과 br 같은 범위 지정형이 아닌 단발 액션형 태그의 경우 </태그명>으로 닫아 줄 필요가 없음.

* 태그종류 - contents 태그
<h#> : 글자의 크기. 숫자가 커질 수록 글자가 커짐. h1~h6
	아무것도 쓰지 않으면 글자는 h4의 크기와 비슷하고 더 얇음(strong 미적용).
<strong> : 글자 Bold 처리
<span style="###"> : 글자 특성 부여
	     color:red
	     font-size:20px
<a href="___"> : 하이퍼링크 삽입
<img ###="___"> : 이미지 삽입
        src : 이미지 경로
        alt : 이미지를 표시할 수 없을 때 출력할 내용
        width : 이미지 가로 크기
        height : 이미지 세로 크기
        loading : 이미지 로딩 방식 
	ㄴ(eager : 모든 이미지 로딩, lazy : 뷰포트의 일정 거리 내에 들어온 이미지만 로딩)
<input type="###" /> : 입력칸 삽입
	      text : 글자 그대로 표시
	      password : ● 형태로 표시
	      radio : 택일
	      checkbox : 다중선택
	      file : 파일첨부 기능 생성
	      button : 버튼 생성
	      submit : 제출 버튼 생성
	      reset : 초기화 버튼 생성
<textarea> : 글상자 삽입
<select> : 선택양식 삽입
ㄴ<option> : select의 자식태그. 선택양식의 항목.
<button> : 버튼 삽입

==========================================================
[2] CSS - Visual Studio 이용
<body>의 내용을 꾸미기 위해 <head>에 꾸밀 방법을 정의.
<head> 속 <style>에 꾸밀 방법과 그 범위를 지정한다.
범위는 선택자에 따라 전체가 되기도, 일정 클래스가 되기도 한다.
style 내용이 길어지면, 같은 폴더에 style.css 파일을 만들고 <head>에서 불러오게 하자.
<link rel="stylesheet" type="text/css" href = "(css파일이름).css">

* 기본구성
<head>
    <style>
        .클래스명 { 
            background-color: black;
            color: white;
        }
    </style>
</head>
<body>
    <div class="클래스명">
    </div>
</body>

selector : 선택자. 꾸미기 위한 범위를 지정.
ㄴ * { } : 전체 선택자. HTML 페이지 모든 태그 지정.
ㄴ ___ { } : 태그 선택자. 선택한 <___>태그 지정.
ㄴ .___ { } : 클래스 선택자. 모든 태그 중 ___ 클래스 지정. <_ class="___"> <__ class="___">
ㄴ __.___ { } : 클래스 선택자. <__>태그 중 ___ 클래스 지정. <__ class="___">
ㄴ .___ > ____ { } : 자식 선택자. <___>태그의 하위 <____>태그 지정.
class : CSS를 적용하기 위해 새로이 설정하는 범주. 적용하고픈 태그에 함께 입력.

- 큰 범위와 작은 범위가 중복될 땐, 작은 범위의 CSS가 최종 적용됨.
- 하나의 태그에 여러 클래스를 나열할 땐 ; 대신 스페이스바로 구분.

* CSS 종류
배경 : background-color; background-image; background-size;
사이즈 : width; height;
폰트 : font-size; font-weight; font-family; color;
간격 : margin(바깥); padding(안쪽);

* 폰트 적용
https://fonts.google.com/?subset=korean

<head>
    <link href=" " rel=" ">
    <style>
        * {
	font-family: 'Nanum Gothic', sans-serif;
    }
    </style>
</head>

framework : 프로그램 설계를 위한 기본 틀
bootstrap : 프론트엔드 프레임워크. 완성된 CSS 모음.
https://getbootstrap.com/docs/4.0/getting-started/introduction/

==========================================================
[3] javascript - Chrome console 창(F12)에서 편집

<onclick="alert( )"> : 클릭하면 경고창 띄움
<onmouseover="this.style.color='red'" onmouseout="this.style.color=' '"> : 마우스 올리면 빨간색, 마우스 떼면 원래색

console.log( ) : ( )을 출력. 파이썬의 print( )와 같음.

* 변수 정의 let a = b
아무렇게나 해도 상관 없지만 쉽게 알아볼 수 있도록 설정하는 것이 좋음.
이미 정의된 변수도 언제든지 덮어쓰기 식으로 새롭게 정의될 수 있다.
ㄴ snake case : let first_name = 'Minseok'
ㄴ camel case : let firstName = 'Minseok'

* 리스트 a_list = [a, b, c, d]
[ ]에 순번을 넣어 요소를 호출.
a_list[0] : a_list 리스트의 첫번째 요소. 즉 a.
a_list[0] = 1 : a_list 리스트의 첫번째 요소를 1로 정의. 즉 a가 1로 대체됨.
a_list.length : a_list 리스트 요소의 개수. 즉 4.
a_list.push( ) : a_list 리스트에 ( ) 요소를 추가. 파이썬의 .append( )

* 딕셔너리 a_dict = {'name' : 'Roy', 'age' : 31}
key : value 값의 묶음으로 구성.
리스트와 다르게 요소의 순번이 아닌 key를 이용해 value를 호출.
a_dict['age'] : a_dict 딕셔너리에서 key 값이 'age'인 value. 즉 31.
a_dict['age'] = 30 : a_dict 딕셔너리에서 'age' key의 value를 30으로 정의. 즉 31이 30으로 대체됨.
a_dict['height'] = 180 : a_dict 딕셔너리에 'height' : 180 요소를 추가.

* 유용한 함수
a % b : a를 b로 나눈 나머지
.toUpperCase( ) : 대문자로 변환
.split( ) : ( )를 기준으로 나누어 리스트화
.join( ) : 리스트의 요소들 사이에 ( )를 넣어 연결

* 함수 정의
function 함수이름(변수){명령}

* 조건문 if( ){ }
if (조건1) {명령1} 
else if (조건2) {명령2}
else {명령3}
만약if 조건1에 부합하면 명령1 실행, 그렇지 않고 만약if 조건2에 부합하면 명령2 실행, 그렇지 않으면 명령3 실행. 
상황에 따라 if절만 쓰거나 if절-else절만 쓰기도 함.
else는 if의 여집합이므로 조건을 달면 안됨.

== : 같다
!= : 다르다
>= : 크거나 같다(이상)
<= : 작거나 같다(이하)
&& : 조건문에서 and 조건
|| : 조건문에서 or 조건

* 반복문 for( ){ }
for (1.시작조건설정; 2.반복조건확인; 3.더하기) {4.명령}
1로 시작하여 반복조건이 맞지 않을 때까지 2->4->3 반복.

++ : 기존 값에 1을 더해서 저장
+= : 앞의 값에 뒤의 값을 더해서 저장




























노수영 - 카카오모빌리티(카카오대리)
최종용 - 33세. 영어교습 학원 운영 경력. 호주 캔버라 대학 졸.
이민석 
반영진 - 91년생. 일본 유학 후 돌아와서 네이버 재직 중.
김Jen - 디자이너?
김상우 - 변호사
김유재 - 삼성전자 가전사업부 소음진동 담당.
이승한 - 화학공학 전공 
이유진 - 외국대학?

